{"remainingRequest":"/home/valter/work/demo7/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/valter/work/demo7/src/components/widgets/statsistics/Widget3.vue?vue&type=template&id=75c55c2e&ts=true","dependencies":[{"path":"/home/valter/work/demo7/src/components/widgets/statsistics/Widget3.vue","mtime":1636661312000},{"path":"/home/valter/work/demo7/node_modules/cache-loader/dist/cjs.js","mtime":1665764724378},{"path":"/home/valter/work/demo7/node_modules/ts-loader/index.js","mtime":1665764724869},{"path":"/home/valter/work/demo7/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1665764726893},{"path":"/home/valter/work/demo7/node_modules/cache-loader/dist/cjs.js","mtime":1665764724378},{"path":"/home/valter/work/demo7/node_modules/vue-loader-v16/dist/index.js","mtime":1665764726893}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDwhLS1iZWdpbjo6U3RhdGlzdGljcyBXaWRnZXQgMy0tPg0KICA8ZGl2IDpjbGFzcz0id2lkZ2V0Q2xhc3NlcyIgY2xhc3M9ImNhcmQiPg0KICAgIDwhLS1iZWdpbjo6Qm9keS0tPg0KICAgIDxkaXYgY2xhc3M9ImNhcmQtYm9keSBkLWZsZXggZmxleC1jb2x1bW4gcC0wIj4NCiAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBmbGV4LXN0YWNrIGZsZXgtZ3Jvdy0xIGNhcmQtcCI+DQogICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBmbGV4LWNvbHVtbiBtZS0yIj4NCiAgICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0idGV4dC1kYXJrIHRleHQtaG92ZXItcHJpbWFyeSBmdy1ib2xkZXIgZnMtMyI+e3sNCiAgICAgICAgICAgIHRpdGxlDQogICAgICAgICAgfX08L2E+DQoNCiAgICAgICAgICA8c3BhbiBjbGFzcz0idGV4dC1tdXRlZCBmdy1ib2xkIG10LTEiPnt7IGRlc2NyaXB0aW9uIH19PC9zcGFuPg0KICAgICAgICA8L2Rpdj4NCg0KICAgICAgICA8c3BhbiBjbGFzcz0ic3ltYm9sIHN5bWJvbC01MHB4Ij4NCiAgICAgICAgICA8c3Bhbg0KICAgICAgICAgICAgOmNsYXNzPSJgYmctbGlnaHQtJHtjb2xvcn0gdGV4dC0ke2NvbG9yfWAiDQogICAgICAgICAgICBjbGFzcz0ic3ltYm9sLWxhYmVsIGZzLTUgZnctYm9sZGVyIg0KICAgICAgICAgICAgPnt7IGNoYW5nZSB9fTwvc3Bhbg0KICAgICAgICAgID4NCiAgICAgICAgPC9zcGFuPg0KICAgICAgPC9kaXY+DQoNCiAgICAgIDwhLS1iZWdpbjo6Q2hhcnQtLT4NCiAgICAgIDxhcGV4Y2hhcnQNCiAgICAgICAgY2xhc3M9InN0YXRpc3RpY3Mtd2lkZ2V0LTMtY2hhcnQgY2FyZC1yb3VuZGVkLWJvdHRvbSINCiAgICAgICAgOm9wdGlvbnM9ImNoYXJ0T3B0aW9ucyINCiAgICAgICAgOnNlcmllcz0ic2VyaWVzIg0KICAgICAgICA6aGVpZ2h0PSJoZWlnaHQiDQogICAgICAgIHR5cGU9ImFyZWEiDQogICAgICA+PC9hcGV4Y2hhcnQ+DQogICAgICA8IS0tZW5kOjpDaGFydC0tPg0KICAgIDwvZGl2Pg0KICAgIDwhLS1lbmQ6OkJvZHktLT4NCiAgPC9kaXY+DQogIDwhLS1lbmQ6OlN0YXRpc3RpY3MgV2lkZ2V0IDMtLT4NCg=="},{"version":3,"sources":["/home/valter/work/demo7/src/components/widgets/statsistics/Widget3.vue"],"names":[],"mappings":"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C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC","file":"/home/valter/work/demo7/src/components/widgets/statsistics/Widget3.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <!--begin::Statistics Widget 3-->\r\n  <div :class=\"widgetClasses\" class=\"card\">\r\n    <!--begin::Body-->\r\n    <div class=\"card-body d-flex flex-column p-0\">\r\n      <div class=\"d-flex flex-stack flex-grow-1 card-p\">\r\n        <div class=\"d-flex flex-column me-2\">\r\n          <a href=\"#\" class=\"text-dark text-hover-primary fw-bolder fs-3\">{{\r\n            title\r\n          }}</a>\r\n\r\n          <span class=\"text-muted fw-bold mt-1\">{{ description }}</span>\r\n        </div>\r\n\r\n        <span class=\"symbol symbol-50px\">\r\n          <span\r\n            :class=\"`bg-light-${color} text-${color}`\"\r\n            class=\"symbol-label fs-5 fw-bolder\"\r\n            >{{ change }}</span\r\n          >\r\n        </span>\r\n      </div>\r\n\r\n      <!--begin::Chart-->\r\n      <apexchart\r\n        class=\"statistics-widget-3-chart card-rounded-bottom\"\r\n        :options=\"chartOptions\"\r\n        :series=\"series\"\r\n        :height=\"height\"\r\n        type=\"area\"\r\n      ></apexchart>\r\n      <!--end::Chart-->\r\n    </div>\r\n    <!--end::Body-->\r\n  </div>\r\n  <!--end::Statistics Widget 3-->\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { defineComponent, ref } from \"vue\";\r\nimport { getCSSVariableValue } from \"@/assets/ts/_utils\";\r\n\r\nexport default defineComponent({\r\n  name: \"kt-widget-3\",\r\n  props: {\r\n    widgetClasses: String,\r\n    title: String,\r\n    description: String,\r\n    change: String,\r\n    color: String,\r\n    height: Number,\r\n  },\r\n  components: {},\r\n  setup(props) {\r\n    const height = ref(props.height);\r\n\r\n    const color = ref(props.color);\r\n\r\n    const labelColor = getCSSVariableValue(\"--bs-\" + \"gray-800\");\r\n    const baseColor = getCSSVariableValue(\"--bs-\" + color.value);\r\n    const lightColor = getCSSVariableValue(\"--bs-light-\" + color.value);\r\n\r\n    const chartOptions = {\r\n      chart: {\r\n        fontFamily: \"inherit\",\r\n        type: \"area\",\r\n        height: height.value,\r\n        toolbar: {\r\n          show: false,\r\n        },\r\n        zoom: {\r\n          enabled: false,\r\n        },\r\n        sparkline: {\r\n          enabled: true,\r\n        },\r\n      },\r\n      plotOptions: {},\r\n      legend: {\r\n        show: false,\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      stroke: {\r\n        curve: \"smooth\",\r\n        show: true,\r\n        width: 3,\r\n        colors: [baseColor],\r\n      },\r\n      xaxis: {\r\n        categories: [\"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\r\n        axisBorder: {\r\n          show: false,\r\n        },\r\n        axisTicks: {\r\n          show: false,\r\n        },\r\n        labels: {\r\n          show: false,\r\n          style: {\r\n            colors: labelColor,\r\n            fontSize: \"12px\",\r\n          },\r\n        },\r\n        crosshairs: {\r\n          show: false,\r\n          position: \"front\",\r\n          stroke: {\r\n            color: \"#E4E6EF\",\r\n            width: 1,\r\n            dashArray: 3,\r\n          },\r\n        },\r\n        tooltip: {\r\n          enabled: false,\r\n        },\r\n      },\r\n      yaxis: {\r\n        min: 0,\r\n        max: 80,\r\n        labels: {\r\n          show: false,\r\n          style: {\r\n            colors: labelColor,\r\n            fontSize: \"12px\",\r\n          },\r\n        },\r\n      },\r\n      states: {\r\n        normal: {\r\n          filter: {\r\n            type: \"none\",\r\n            value: 0,\r\n          },\r\n        },\r\n        hover: {\r\n          filter: {\r\n            type: \"none\",\r\n            value: 0,\r\n          },\r\n        },\r\n        active: {\r\n          allowMultipleDataPointsSelection: false,\r\n          filter: {\r\n            type: \"none\",\r\n            value: 0,\r\n          },\r\n        },\r\n      },\r\n      tooltip: {\r\n        style: {\r\n          fontSize: \"12px\",\r\n        },\r\n        y: {\r\n          formatter: function (val) {\r\n            return \"$\" + val + \" thousands\";\r\n          },\r\n        },\r\n      },\r\n      fill: {\r\n        type: \"gradient\",\r\n        gradient: {\r\n          stops: [0, 100],\r\n        },\r\n      },\r\n      colors: [baseColor],\r\n      markers: {\r\n        colors: [baseColor],\r\n        strokeColor: [lightColor],\r\n        strokeWidth: 3,\r\n      },\r\n    };\r\n\r\n    const series = [\r\n      {\r\n        name: \"Net Profit\",\r\n        data: [30, 45, 32, 70, 40],\r\n      },\r\n    ];\r\n\r\n    return {\r\n      chartOptions,\r\n      series,\r\n    };\r\n  },\r\n});\r\n</script>\r\n"]}]}